name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Check format
        run: cargo +nightly fmt --check

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: dtolnay/rust-toolchain@stable

      - name: Check docs
        run: cargo doc --no-deps --document-private-items --all-features
        env:
          RUSTDOCFLAGS: -D warnings

  clippy:
    name: Clippy
    needs: [format, docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Run clippy
        run: cargo clippy --all-features
        env:
          RUSTFLAGS: -D warnings

  debian:
    name: Release DEB packages
    needs: clippy
    runs-on: ubuntu-22.04-arm
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Build DEB packages
        run: |
          VARIANTS=("v2" "v3")
          
          for variant in "${VARIANTS[@]}"; do
            PACKAGE=$(cargo deb --variant=$variant | tail -1)
            mv $PACKAGE ${PACKAGE/argon-fan_/argon-fan-${variant}_}
          done

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: target/debian/*.deb
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  home_assistant:
    runs-on: ubuntu-22.04-arm
    needs: clippy
    permissions:
      packages: write
    strategy:
      matrix:
        case_version: ["v2", "v3"]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Extract version
        run: |
          VERSION=$(cargo pkgid | awk -F'[#@]' '{print $NF}')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./home_assistant/Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha
          platforms: linux/arm64
          build-args: CASE_VERSION=${{ matrix.case_version }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/argon-fan-${{ matrix.case_version }}:${{ env.VERSION }}
            ghcr.io/${{ github.repository_owner }}/argon-fan-${{ matrix.case_version }}:latest
